buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.gradle.publish:plugin-publish-plugin:0.10.1'
    }
}

plugins {
    id 'groovy'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'kr.entree'
version '1.2.0-SNAPSHOT'

['publish', 'generateMeta'].each {
    def buildFileName = "gradle/${it}.gradle"
    def buildFile = file(buildFileName)
    if (buildFile.isFile()) {
        apply from: buildFile
    } else {
        apply from: "${buildFileName}.kts"
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    shadow gradleApi()
    shadow localGroovy()
    shadow 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.yaml:snakeyaml:1.25'
    implementation 'org.ow2.asm:asm:7.2'
    testImplementation 'junit:junit:4.12'
}

final def PACKAGE_NAME = "${project.group}.spigradle"

shadowJar {
    def prefix = "${PACKAGE_NAME}.libs"
    [
            'org.yaml.snakeyaml': 'snakeyaml',
            'org.objectweb.asm' : 'asm'
    ].each {
        relocate(it.key, "${prefix}.$it.value")
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    archiveClassifier.set("")
    minimize()
}

jar {
    dependsOn shadowJar
    enabled = false
}

// Do not make relation with java
compileGroovy.classpath = sourceSets.main.compileClasspath
// Include groovy classpath into Kotlin compiler
compileKotlin.classpath += files(sourceSets.main.groovy.classesDirectory)
