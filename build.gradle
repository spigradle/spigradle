plugins {
    id 'groovy'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'com.gradle.plugin-publish' version '0.10.1'
    id 'com.jfrog.bintray' version '1.8.4'
}

group 'kr.entree'
version '1.1.0'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    shadow gradleApi()
    shadow localGroovy()
    implementation 'org.yaml:snakeyaml:1.25'
    implementation 'org.ow2.asm:asm:7.2'
    testImplementation 'junit:junit:4.12'
}

final def PACKAGE_NAME = "${project.group}.spigradle"

shadowJar {
    def prefix = "${PACKAGE_NAME}.libs"
    [
            'org.yaml.snakeyaml': 'snakeyaml',
            'org.objectweb.asm' : 'asm'
    ].each {
        relocate(it.key, "${prefix}.$it.value")
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    archiveClassifier.set("")
    minimize()
}

final def VCS_URL = 'https://github.com/EntryPointKR/Spigradle.git'

pluginBundle {
    website = 'https://github.com/EntryPointKR/Spigradle'
    vcsUrl = VCS_URL
    tags = ['spigot', 'minecraft']
    plugins {
        spigradle {
            id = 'kr.entree.spigradle'
            displayName = 'Spigradle'
            description = 'Gradle plugin for developing Spigot plugin.'
        }
    }
}

bintray {
    user = project.findProperty('bintray.publish.user')
    key = project.findProperty('bintray.publish.key')
    publications = ['spigradle']
    publish = true
    pkg {
        repo = 'Spigradle'
        name = 'spigradle'
        desc = 'Gradle plugin for developing Spigot plugin.'
        websiteUrl = 'https://github.com/EntryPointKR/Spigradle'
        githubRepo = 'https://github.com/EntryPointKR/Spigradle'
        issueTrackerUrl = 'https://github.com/EntryPointKR/Spigradle/issues'
        licenses = ['MIT']
        vcsUrl = VCS_URL
        version {
            name = project.version
            released = new Date()
            vcsTag = project.version
        }
    }
}

publishing {
    publications {
        spigradle(MavenPublication) { MavenPublication publication ->
            shadow.component(publication)
            afterEvaluate {
                artifact publishPluginJar
                artifact publishPluginJavaDocsJar
                artifact publishPluginGroovyDocsJar
            }
        }
    }
}

jar {
    dependsOn shadowJar
    enabled = false
}
